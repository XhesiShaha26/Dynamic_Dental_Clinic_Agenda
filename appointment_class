#include <iostream>
#include <vector>
#include <string>
#include <ctime>

class Appointment {
private:
    std::string patientName;
    std::string appointmentType;
    std::string description;
    std::tm startTime;
    std::tm endTime;

public:
    Appointment(const std::string& name, const std::string& type, const std::string& desc, std::tm start, std::tm end)
        : patientName(name), appointmentType(type), description(desc), startTime(start), endTime(end) {}

    bool conflictsWith(const Appointment& other) const {
        return (std::mktime(&startTime) < std::mktime(&other.endTime) &&
                std::mktime(&endTime) > std::mktime(&other.startTime));
    }

    std::string getPatientName() const { return patientName; }
    std::tm getStartTime() const { return startTime; }
    std::tm getEndTime() const { return endTime; }

    void print() const {
        char startStr[100], endStr[100];
        std::strftime(startStr, sizeof(startStr), "%c", &startTime);
        std::strftime(endStr, sizeof(endStr), "%c", &endTime);
        std::cout << "Appointment for " << patientName << " (" << appointmentType << "): "
                  << description << "\nStarts: " << startStr << ", Ends: " << endStr << std::endl;
    }
};
